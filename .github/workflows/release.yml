name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  generate-release:
    name: Generate Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.RELEASE_PLEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PLEASE_PRIVATE_KEY }}

      - uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          release-type: go

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: sigstore/cosign-installer@v3.8.1
      - uses: anchore/sbom-action/download-syft@v0
      - uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.sum
          go-version-file: go.mod

      - uses: aws-actions/configure-aws-credentials@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: ${{ github.event_name }}-${{ github.run_id }}-${{ github.job }}
          aws-region: us-east-1

      - uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: ~> v2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: goreleaser/goreleaser-action@v6
        if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
        with:
          distribution: goreleaser
          version: ~> v2
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/attest-build-provenance@v2
        continue-on-error: true  # TODO: remove once repository is public
        with:
          subject-checksums: ./dist/checksums.txt
