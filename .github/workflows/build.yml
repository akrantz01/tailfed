name: Build

on:
  push:

jobs:
  client:
    name: Client ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - darwin
          - linux
          - windows
        arch:
          - "386"
          - amd64
          - arm
          - arm64
        exclude:
          - os: windows
            arch: arm
          - os: windows
            arch: arm64
          - os: darwin
            arch: "386"
          - os: darwin
            arch: arm
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.sum
          go-version-file: go.mod

      - run: make build-client
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: client-${{ matrix.os }}-${{ matrix.arch }}
          path: out/client

  lambda:
    name: ${{ matrix.function }} Lambda (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        function:
          - initializer
          - finalizer
          - verifier
          - generator
        arch:
          - amd64
          - arm64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: true
          cache-dependency-path: go.sum
          go-version-file: go.mod

      - run: make build-lambda LAMBDA_BINARIES=${{ matrix.function }}
        env:
          GOOS: linux
          GOARCH: ${{ matrix.arch }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.function }}-${{ matrix.arch }}
          path: out/${{ matrix.function }}
